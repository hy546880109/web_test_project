{
  "uid" : "fdc45bd7b1df1512",
  "name" : "测试百度搜索失败",
  "fullName" : "test_07_allure_demo2.TestBaidu#test_baidu_search_fail",
  "historyId" : "428eda100646e1807832a5c472f812d5",
  "time" : {
    "start" : 1610786613155,
    "stop" : 1610786614663,
    "duration" : 1508
  },
  "description" : "测试百度的搜索功能",
  "descriptionHtml" : "<p>测试百度的搜索功能</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "self = <UI_Test_Project.test_case.test_07_allure_demo2.TestBaidu object at 0x0000020605498808>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c76fdf340b5baa3f3088209561f6871\")>\nsearch_string = '狂师', expect_string = '狂师'\n\n    @pytest.mark.test1\n    @allure.title(\"测试百度搜索失败\")\n    @pytest.mark.parametrize('search_string, expect_string', [('狂师', '狂师')])\n    def test_baidu_search_fail(self, driver,search_string,expect_string):\n        self.driver = driver\n        baidu_home = BaiduHomePage(self.driver)\n        baidu_home.get(URLConf.INDEX_URL.value)\n        baidu_home.home_search_input.send_keys(search_string)\n        baidu_home.home_search_button.click()\n        self.save_image_to_allure()\n>       assert False\nE       assert False\n\n..\\test_case\\test_07_allure_demo2.py:44: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1610786609106,
      "stop" : 1610786613155,
      "duration" : 4049
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "测试百度的搜索功能",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "self = <UI_Test_Project.test_case.test_07_allure_demo2.TestBaidu object at 0x0000020605498808>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c76fdf340b5baa3f3088209561f6871\")>\nsearch_string = '狂师', expect_string = '狂师'\n\n    @pytest.mark.test1\n    @allure.title(\"测试百度搜索失败\")\n    @pytest.mark.parametrize('search_string, expect_string', [('狂师', '狂师')])\n    def test_baidu_search_fail(self, driver,search_string,expect_string):\n        self.driver = driver\n        baidu_home = BaiduHomePage(self.driver)\n        baidu_home.get(URLConf.INDEX_URL.value)\n        baidu_home.home_search_input.send_keys(search_string)\n        baidu_home.home_search_button.click()\n        self.save_image_to_allure()\n>       assert False\nE       assert False\n\n..\\test_case\\test_07_allure_demo2.py:44: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "871c4fd6a02a5f53",
      "name" : "失败截图",
      "source" : "871c4fd6a02a5f53.png",
      "type" : "image/png",
      "size" : 30389
    }, {
      "uid" : "d111b61032b26d0a",
      "name" : "log",
      "source" : "d111b61032b26d0a.txt",
      "type" : "text/plain",
      "size" : 3965
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1610786614814,
      "stop" : 1610786619933,
      "duration" : 5119
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "百度"
  }, {
    "name" : "feature",
    "value" : "百度搜索"
  }, {
    "name" : "severity",
    "value" : "BLOCKER"
  }, {
    "name" : "tag",
    "value" : "mikezhou2"
  }, {
    "name" : "tag",
    "value" : "test1"
  }, {
    "name" : "suite",
    "value" : "test_07_allure_demo2"
  }, {
    "name" : "subSuite",
    "value" : "TestBaidu"
  }, {
    "name" : "host",
    "value" : "LAPTOP-C73H3V04"
  }, {
    "name" : "thread",
    "value" : "14544-Thread-1"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_07_allure_demo2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expect_string",
    "value" : "'狂师'"
  }, {
    "name" : "search_string",
    "value" : "'狂师'"
  } ],
  "links" : [ {
    "name" : "http://www.baidu.com",
    "url" : "http://www.baidu.com",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "mikezhou2", "test1" ]
  },
  "source" : "fdc45bd7b1df1512.json",
  "parameterValues" : [ "'狂师'", "'狂师'" ]
}